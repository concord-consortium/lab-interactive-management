require 'rubygems'
require 'active_support/all'

# TODO: use a Rails generator

# make sure that this file reflects the latest md2d meta data
# md2d metadata is defined in that lab project at:
# src/lab//md2d/models/metadata.js
load "meta_data/md2d_metadata.rb"


serialized_attributes = []
# pull the hashes inside the mainProperites hash up to the top level
main_properties = $md2d_metadata.delete(:mainProperties)
metadata = $md2d_metadata.merge(main_properties)

metadata.each do |k, v|
  prop_name = k.to_s
  if %w{ type created_at updated_at }.include?(prop_name)
    msg = "Error: Can not use a reserved name \"#{prop_name}\" for an attribute!!!"
    # raise msg
    puts msg
    prop_name = "_#{prop_name}"
    puts "Changed attribute name to #{prop_name}"
  end

  serialized_attributes << ":#{prop_name}"
end
serialized_attributes << ":url"
serialized_attributes_str = "store :json_rep, :accessors => [" << serialized_attributes.join(', ') << ']'

puts "Generating attributes"
puts serialized_attributes_str

code = <<-CODE
# Generated by #{$0}
# Depends on the definition of interactive in the lab project

# just use this in the Interactive AR model
module Md2dStore
  extend ActiveSupport::Concern

  module ClassMethods
    # find the model where the json_rep['url'] == url
    def find_by_url(url)
      find do |g|
        g if g.json_rep['url'] == path
      end
    end
  end

  module InstanceMethods
  end

  included do
    # GENERATED
      #{serialized_attributes_str}
    # GENERATED
  end
end
CODE
# puts code

file_path = 'app/models/concerns/md2d_store.rb'
puts "Writing to #{file_path}"

File.open(file_path, 'w') do |f|
  f.write(code)
end
