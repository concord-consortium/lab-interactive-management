require 'rubygems'
require 'active_support/all'
require 'open-uri'
# TODO: use a Rails generator

# TODO: get this from the lab web server?
# make sure that this file reflects the latest interactive meta data
# interactive metadata is defined in that lab project at:
# src/lab/common/controllers/interactive-metadata.js
load "meta_data/interactive_metadata.rb"

# TODO: allow one to point this at other servers
# TODO: may replace this with a static list of properties if they
# don't change
# Interactive properties that are defined in the interactives.json file
keys = JSON.parse(open("http://lab.dev.concord.org/interactives.json").read)['interactives'].map(&:keys).uniq
serialized_attributes = keys.flatten.map{ |k| ":#{k}"}
#puts "Interactive properties defined in interactive.json \n#{serialized_attributes.inspect}"
# [:title, :path, :groupKey, :subtitle, :about, :publicationStatus]

$interactive_metadata.each do |k, v|
  prop_name = k.to_s
  if %w{ type created_at updated_at }.include?(prop_name)
    msg = "Error: Can not use a reserved name \"#{prop_name}\" for an attribute!!!"
    # raise msg
    puts msg
    prop_name = "_#{prop_name}"
    puts "Changed attribute name to #{prop_name}"
  end

  serialized_attributes << ":#{prop_name}"
end
# TODO: order the interactive properties like:
# title, publicationStatus, subtitle, about, fontScale, models, outputs, filteredOutputs, parameters, exports, components, layout, template
serialized_attributes_str = "store :json_rep, :accessors => [" << serialized_attributes.uniq.join(', ') << ']'
# puts serialized_attributes_str

# code = <<-CODE.gsub(/^ {6}/, '')
code = <<-CODE
# Generated by #{$0}
# Depends on the definition of interactive in the lab project

# just use this in the Interactive AR model
module InteractiveStore
  extend ActiveSupport::Concern

  module ClassMethods
    # find the model where the json_rep['path'] == path
    def find_by_path(path)
      find do |g|
        g if g.json_rep['path'] == path
      end
    end
  end

  module InstanceMethods
  end

  included do
    # GENERATED
      #{serialized_attributes_str}
    # GENERATED
  end
end
CODE
# puts code

file_path = 'app/models/concerns/interactive_store.rb'
puts "Writing to #{file_path}"

File.open(file_path, 'w') do |f|
  f.write(code)
end
